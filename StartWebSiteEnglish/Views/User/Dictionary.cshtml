@using StartWebSiteEnglish.Models
@using StartWebSiteEnglish.HtmlHelpers
@model  List<Words>

<link href="http://demos.creative-tim.com/fresh-bootstrap-table/assets/css/fresh-bootstrap-table.css" rel="stylesheet" />
<script type="text/javascript" src="http://bootstraptema.ru/plugins/2015/b-v3-3-6/bootstrap.min.js"></script>
<script type="text/javascript" src="http://demos.creative-tim.com/fresh-bootstrap-table/assets/js/bootstrap-table.js"></script>

<div style="height: 85%;">
   <a href="/User/UserPage"><i class="fas fa-times-circle close" onclick="showDictionary('none')" ></i></a>
    <div class="linear-head">
        <div class="material name" style="text-align: center; ">
            <h3 id="title" style="font-size:1.5em;">Изученные слова</h3>
        </div>
        <div class="wrapper" style="width: 100%;">
            <div class="container" style="width: 100%;">
                <div class="row" style="overflow: auto; height: -webkit-fill-available;">
                    <div class="col-md-8 col-md-offset-2" style="width: 100%; margin-left: 0;">
                        <div class="fresh-table toolbar-color-blue">
                            <table id="fresh-table" class="table">
                                <thead>
                                    <th data-field="id">№</th>
                                    <th data-field="word" data-sortable="true">Словл</th>
                                    <th data-field="translatoin" data-sortable="true">Перевод</th>
                                    <th data-field="image" data-sortable="true">Изображение</th>
                                    <th>Переместить</th>
                                    <th data-field="actions">Действие</th>
                                </thead>
                                <tbody>
                                    @for (int i=0; i<Model.Count; i++)
                                     {
                                       
                                            <tr id="word_@Model[i].Id">
                                                <td>@(i+1)</td>
                                                <td data-label="Слово">@Model[i].Word</td>
                                                <td data-label="Перевод">@Model[i].Translation</td>
                                                <td class="imgword">
                                                      @if (Model[i].PictureUrl == "" || Model[i].PictureUrl == null)
                                                      {
                                                           <img src="~/fonts/none-image.gif" style="width: 50px; height: 50px;">
                                                      }
                                                       else
                                                       {
                                                           <img style="width: 50px; height: 50px;" scr="@Model[i].PictureUrl"/>

                                                        }
                                                </td>
                                                <td><a href="#" class="myButton">На узучение</a> </td>
                                                <td>
                                                    <a class="myButton delete" name="@Model[i].Id" href="#" >Удалить</a>
                                                    <i class="fas fa-trash-alt"></i>
                                                </td>
                                            </tr>
                                     }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
        <script>
            $("a.delete").on("click", function () {
                var idword = this.name;
                $.ajax({
                    type: 'GET',
                    url: '/User/DeleteWord',
                    data: { id: idword },
                    datatType: 'json',
                    success: function (response) {
                        console.log(response);
                        $("#word_" + idword).css("display", "none");
                    },
                    error: function (response) {
                        console.log(response);
                    }
                });
            });
        </script>

        @*<script>
            var $table = $('#fresh-table'),
                $alertBtn = $('#alertBtn'),
                full_screen = false;

            $().ready(function () {
                $table.bootstrapTable({
                    toolbar: ".toolbar",

                    showRefresh: true,
                    search: true,
                    showToggle: true,
                    showColumns: true,
                    pagination: true,
                    striped: true,
                    pageSize: 8,
                    pageList: [8, 10, 25, 50, 100],

                    formatShowingRows: function (pageFrom, pageTo, totalRows) {
                        //do nothing here, we don't want to show the text "showing x of y from..."
                    },
                    formatRecordsPerPage: function (pageNumber) {
                        return pageNumber + " rows visible";
                    },
                    icons: {
                        refresh: 'fa fa-refresh',
                        toggle: 'fa fa-th-list',
                        columns: 'fa fa-columns',
                        detailOpen: 'fa fa-plus-circle',
                        detailClose: 'fa fa-minus-circle'
                    }
                });



                $(window).resize(function () {
                    $table.bootstrapTable('resetView');
                });


                window.operateEvents = {
                    'click .like': function (e, value, row, index) {
                        alert('You click like icon, row: ' + JSON.stringify(row));
                        console.log(value, row, index);
                    },
                    'click .edit': function (e, value, row, index) {
                        alert('You click edit icon, row: ' + JSON.stringify(row));
                        console.log(value, row, index);
                    },
                    'click .remove': function (e, value, row, index) {
                        $table.bootstrapTable('remove', {
                            field: 'id',
                            values: [row.id]
                        });

                    }
                };

                $alertBtn.click(function () {
                    alert("You pressed on Alert");
                });

            });


            function operateFormatter(value, row, index) {
                return [
                    '<a rel="tooltip" title="Like" class="table-action like" href="javascript:void(0)" title="Like">',
                    '<i class="fa fa-heart"></i>',
                    '</a>',
                    '<a rel="tooltip" title="Edit" class="table-action edit" href="javascript:void(0)" title="Edit">',
                    '<i class="fa fa-edit"></i>',
                    '</a>',
                    '<a rel="tooltip" title="Remove" class="table-action remove" href="javascript:void(0)" title="Remove">',
                    '<i class="fa fa-remove"></i>',
                    '</a>'
                ].join('');
            }


        </script>*@
    
    </div>
</div>

<div class="btn-group">
    @* @Html.PageLinks(Model.pageInfo, x => Url.Action("Dictionary", new { page = x }))*@
</div>
